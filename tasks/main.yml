---

- name: check source hostname prefix
  when:
    - source['host'] is defined
  set_fact:
    source_host: "{{ (source['host'].startswith('http://') or source['host'].startswith('https://'))
                  | ternary(source['host'],
                            source['host'] | regex_replace('^(.*)$', 'http://\\1'))
                  }}"
  tags: always

- name: check destination hostname prefix
  when:
    - destination['host'] is defined
  set_fact:
    dest_host: "{{ (destination['host'].startswith('http://') or destination['host'].startswith('https://'))
                | ternary(destination['host'],
                          destination['host'] | regex_replace('^(.*)$', 'http://\\1'))
                }}"
  tags: always

- when:
    - dest_host is defined
    - source_host is defined
    - dest_host != source_host
  include_tasks:
    file: "version_comparison.yml"

- name: cannot reindex
  when:
    - dest_host is undefined or dest_host == source_host  # working single host
    - destination['indices'] is undefined or (destination['indices'] == source['indices'])
    - async  # asynchronous reindex
  block:
    - name: warning message
      debug:
        msg: "running asynchronous reindex with required temporary indices may not work!!"

    - meta: end_play
  tags: always

- when: source['index_regex_pattern'] is defined
  block:
    - name: fetch all indices with a specified name pattern
      uri:
        method: GET
        url: "{{ source_host }}/_cat/indices?s=index&h=index"
        return_content: true
      register: all_indices

    - set_fact:
        source:
          indices: "{{ all_indices['content'].split('\n') | select('match', source['index_regex_pattern']) | list }}"

- name: reindex original indices
  uri:
    method: POST
    url: "{{ dest_host | default(source_host) }}/_reindex?wait_for_completion={{ async | ternary('false', 'true') }}"
    timeout: "{{ timeout }}"
    body: "{{ lookup('template', 'reindex-body.j2') }}"
    body_format: "json"
    headers:
      Content-Type: "application/json"
    return_content: true
  loop: "{{ ((source['indices'] | length) == (destination['indices'] | default([]) | length))
         | ternary(source['indices'] | zip(destination['indices'] | default([])) | list,
                   source['indices'])
         }}"
  tags: update, migrate

- name: asynchrounous reindex info
  when: async
  debug:
    msg: "Check the reindex status in the Tasks API 'GET _tasks?detailed&actions=*reindex'"
  tags: migrate

- name: delete original indices
  when:
    - (dest_host is defined and dest_host == source_host) or dest_host is not defined
    - not async
  uri:
    method: DELETE
    url: "{{ source_host }}/{{ source['indices'] | join(',') }}"
  tags: update, delete, migrate

- name: reindex and delete temporary indices
  when:
    - destination['indices'] is undefined
    - (dest_host is defined and dest_host == source_host) or dest_host is not defined
  block:
    - name: reindex temporary indces
      uri:
        method: POST
        url: "{{ source_host }}/_reindex"
        timeout: "{{ timeout }}"
        body: {"source": {"index": "{{ item.0 }}{{ suffix }}"}, "dest": {"index": "{{ item.1 }}"}}
        body_format: "json"
        headers:
          Content-Type: "application/json"
        return_content: true
      loop: "{{ ((source['indices'] | length) == (destination['indices'] | default([]) | length))
             | ternary(source['indices'] | zip(destination['indices'] | default([])) | list,
                       source['indices'] | zip(source['indices']) | list)
             }}"
      tags: update, restore

    - name: delete temporary indices
      when: not keep
      uri:
        method: DELETE
        url: "{{ source_host }}/{{ source['indices'] | join(suffix + ',') }}{{ suffix }}"
      tags: delete, update, restore
